@page
@model CFDIWEB.Pages.usuariosModel
@{
    ViewData["Title"] = "Login";
}
@Html.AntiForgeryToken()

<style>
    .spinner-container {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: #02020254;
        z-index: 999;
    }
 
    .spinner-border {
        text-align: center;
        position: absolute;
        left: calc(50vw - 20px);
        top: calc(50vh - 20px);
    }
</style>

<div class="text-center">
    <h1 class="login">Inicio de Sesion</h1>
</div>

<div class="container">
    <form name="">
        <div class="row">
            <div class="col col-sm-12">
                <label for="constrasena" class="form-label">Usuario:*</label>
                <input id = "usuario" class="form-control">
            </div>
        </div>

        <div class="row">
            <div class="col col-sm-12">
                <label for="constrasena" class="form-label">Contrasena:*</label>
                <input id = "constrasena" class="form-control">
            </div>
        </div>
        <input type="button" value="Consulta" onclick="javascript:Login()"/>
    </form>
</div>

<!--div id="spinner">
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>  
</div-->
<div id="spinner"></div>

@section scripts{
    <script type="text/javascript">

        urlPostVerifica = "@Url.Page("/usuarios")?handler=Login"

        async function Login() {
            var person = { "usuario": document.getElementById("usuario").value, "contraseña": document.getElementById("constrasena").value };
            await Spin();
            let data = await fetch(urlPostVerifica, {
                method: "post",
                body: JSON.stringify(person),
                headers:
                {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val(),
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                }
            })
            .then(function (response) {
               
                return response.json();
            })

         
         
            if (data.responseMessage == "" || data.responseMessage == undefined) {
                window.location.replace('https://localhost:7089/menu');
            }else{
                alert(data.responseMessage)
            }

            await StopSpinner();
       
        }


        async function Spin(){
            var component = document.getElementById('spinner');
            component.innerHTML = '<div class="spinner-container" id="spinner-container"> <div class="spinner-border" role = "status"' +
                '<span class="visually-hidden"></span></div></div>'
        }

        async function StopSpinner(){
            var component = document.getElementById('spinner-container');
            component.remove()
        }

    </script>
}